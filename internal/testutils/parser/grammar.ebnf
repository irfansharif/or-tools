Digit    = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" .
Digits   = Digit { Digit } .
Letter   = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L"
         | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X"
         | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j"
         | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v"
         | "w" | "x" | "y" | "z" .
Word     = Letter { Letter } .
Boolean  = "true" | "false" .

Identifier     = Word .
Number         = [ "-" ] Digits .
Domain         = "[" Number "," Number "]" .
Variable       = Identifier | Letter "to" Letter .
Interval       = Identifier "as" "[" Identifier "," Identifier "|" Identifier "]" .
LinearTerm     = ( [ Digits ] Identifier ) | Digits .
LinearExpr     = [ "-" ] LinearTerm { ( "+" | "-" ) LinearTerm } | "Σ" "(" Variables ")" .
IntervalDemand = Identifier ":" Identifier .

Booleans        = Boolean { "," Boolean } .
Numbers         = Number { "," Number } .
Domains         = Domain { "∪" Domain } .
Variables       = Variable { "," Variable } .
Intervals       = Interval { "," Interval } .
LinearExprs     = LinearExpr { "," LinearExpr } .
IntervalDemands = IntervalDemand {"," IntervalDemand } .

NumbersList = "[" Numbers "]" { "∪" "[" Numbers "]" } .
BooleanList = "[" Booleans "]" { "∪" "[" Booleans "]" } .

AssignmentsArgument      = "[" Variables "]" ( "∈" | "∉" ) ( NumbersList | BooleanList ) .
BinaryOpArgument         = Identifier ( "/" | "%" | "*" ) Identifier "==" Identifier .
ConstantsArgument        = Variables "==" Number .
CumulativeArgument       = IntervalDemands "|" Variable .
DomainArgument           = ( Variables | LinearExprs ) "in" Domains .
ElementArgument          = Identifier "==" "[" Variables "]" "[" Identifier "]" .
ImplicationArgument      = Identifier "→"  Identifier .
IntervalsArgument        = Intervals .
KArgument                = Variables "|" Digits .
LinearEqualityArgument   = LinearExpr "==" ( "max" | "min" ) "(" LinearExprs ")" .
LinearExprsArgument      = LinearExprs .
NonOverlapping2DArgument = "[" Variables "]" "," "[" Variables "]" "," Boolean .
VariableEqualityArgument = Identifier "==" ( "max" | "min" ) "(" Variables ")" .
VariablesArgument        = Variables .

Argument = AssignmentsArgument
         | BinaryOpArgument
         | ConstantsArgument
         | CumulativeArgument
         | DomainArgument
         | ElementArgument
         | ImplicationArgument
         | IntervalsArgument
         | KArgument
         | LinearEqualityArgument
         | LinearExprsArgument
         | NonOverlapping2DArgument
         | VariableEqualityArgument
         | VariablesArgument .

Method      = Identifier { "-" | Identifier | Digits } .
Receiver    = Identifier .
Enforcement = "if" Variables .
Statement   = Receiver "." Method "(" [ Argument ] ")" [ Enforcement ] .
